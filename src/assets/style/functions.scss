// Функция конвертации значения в единицы rem
@function rem($value) {
  @return ($value / 16) + rem;
}

// Пример использования
// .element {
//   width: rem(16); // Это может быть эквивалентно width: 1rem;
//   padding: rem(16) rem(16) rem(16) rem(16); // Это может быть эквивалентно padding: 1rem 1rem 1rem 1rem;
// }



// ======================================================================================================================
// Super адаптивное свойство!!! =)
// Функция нахождения среднего плавающего числа (которое меняеться в зависимости от ширины экрана) между min и max заданым порогом
// Для метода clamp(min, val, max)

// Функция принимает на входе 4 аргумента
// $minPX - минимальная допустимая величина для объекта или дистанции
// $maxPX - максимальная допустимая величина для объекта или дистанции
// $minVP - минимальное желаемое значение вьюпорта, при котором величина объекта будет равна $minPX
// $maxVP - максимальное желаемое значение вьюпорта, при котором величина объекта будет равна $maxPX

// Пример вызова font-size: super-clamp(18, 32, 320, 1280);

// На выходе получаем свойство font-size: clamp(min, val, max); 
// Которое меняет размер текста от 1,125rem (18px) до 2rem (32px) в диапазоне ширины экрана от 320px до 1280px
// Функция может применяться к обсолютно любому свойству т.к. width, height, margin-bottom, gap .....

@function super-clamp($minPX, $maxPX, $minVP, $maxVP) {
  $differenceVP: ($maxVP - $minVP) / 100;
  $differencePX: $maxPX - $minPX;
  $partVW: $differencePX / $differenceVP;
  $percentVP: $minVP / 100;
  $part1: $percentVP * $partVW;
  $part2: $minPX - $part1;
  $valueREM: ($part2 / 16) + rem;
  $valueVW: ($partVW) + vw;
  $minREM: ($minPX / 16) + rem;
  $maxREM: ($maxPX / 16) + rem;
  @return clamp($minREM, #{$valueREM} + #{$valueVW}, $maxREM);
}
